// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/pingpong.proto

package pingpong

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	Move          string                 `protobuf:"bytes,2,opt,name=move,proto3" json:"move,omitempty"`
	RoomCode      string                 `protobuf:"bytes,3,opt,name=room_code,json=roomCode,proto3" json:"room_code,omitempty"` // ← lo agregas aquí
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameAction) Reset() {
	*x = GameAction{}
	mi := &file_proto_pingpong_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAction) ProtoMessage() {}

func (x *GameAction) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pingpong_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAction.ProtoReflect.Descriptor instead.
func (*GameAction) Descriptor() ([]byte, []int) {
	return file_proto_pingpong_proto_rawDescGZIP(), []int{0}
}

func (x *GameAction) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GameAction) GetMove() string {
	if x != nil {
		return x.Move
	}
	return ""
}

func (x *GameAction) GetRoomCode() string {
	if x != nil {
		return x.RoomCode
	}
	return ""
}

type Vector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             float32                `protobuf:"fixed32,1,opt,name=X,proto3" json:"X,omitempty"`
	Y             float32                `protobuf:"fixed32,2,opt,name=Y,proto3" json:"Y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector) Reset() {
	*x = Vector{}
	mi := &file_proto_pingpong_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pingpong_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_proto_pingpong_proto_rawDescGZIP(), []int{1}
}

func (x *Vector) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Vector) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type GameState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomCode      string                 `protobuf:"bytes,1,opt,name=room_code,json=roomCode,proto3" json:"room_code,omitempty"`
	Ball          *Vector                `protobuf:"bytes,2,opt,name=Ball,proto3" json:"Ball,omitempty"`
	Paddle1       *Vector                `protobuf:"bytes,3,opt,name=Paddle1,proto3" json:"Paddle1,omitempty"`
	Paddle2       *Vector                `protobuf:"bytes,4,opt,name=Paddle2,proto3" json:"Paddle2,omitempty"`
	Score1        int32                  `protobuf:"varint,5,opt,name=Score1,proto3" json:"Score1,omitempty"`
	Score2        int32                  `protobuf:"varint,6,opt,name=Score2,proto3" json:"Score2,omitempty"`
	PlayerId      string                 `protobuf:"bytes,7,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` // si lo necesitas también
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameState) Reset() {
	*x = GameState{}
	mi := &file_proto_pingpong_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_pingpong_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_proto_pingpong_proto_rawDescGZIP(), []int{2}
}

func (x *GameState) GetRoomCode() string {
	if x != nil {
		return x.RoomCode
	}
	return ""
}

func (x *GameState) GetBall() *Vector {
	if x != nil {
		return x.Ball
	}
	return nil
}

func (x *GameState) GetPaddle1() *Vector {
	if x != nil {
		return x.Paddle1
	}
	return nil
}

func (x *GameState) GetPaddle2() *Vector {
	if x != nil {
		return x.Paddle2
	}
	return nil
}

func (x *GameState) GetScore1() int32 {
	if x != nil {
		return x.Score1
	}
	return 0
}

func (x *GameState) GetScore2() int32 {
	if x != nil {
		return x.Score2
	}
	return 0
}

func (x *GameState) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

var File_proto_pingpong_proto protoreflect.FileDescriptor

const file_proto_pingpong_proto_rawDesc = "" +
	"\n" +
	"\x14proto/pingpong.proto\x12\bpingpong\"Z\n" +
	"\n" +
	"GameAction\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12\x12\n" +
	"\x04move\x18\x02 \x01(\tR\x04move\x12\x1b\n" +
	"\troom_code\x18\x03 \x01(\tR\broomCode\"$\n" +
	"\x06Vector\x12\f\n" +
	"\x01X\x18\x01 \x01(\x02R\x01X\x12\f\n" +
	"\x01Y\x18\x02 \x01(\x02R\x01Y\"\xf3\x01\n" +
	"\tGameState\x12\x1b\n" +
	"\troom_code\x18\x01 \x01(\tR\broomCode\x12$\n" +
	"\x04Ball\x18\x02 \x01(\v2\x10.pingpong.VectorR\x04Ball\x12*\n" +
	"\aPaddle1\x18\x03 \x01(\v2\x10.pingpong.VectorR\aPaddle1\x12*\n" +
	"\aPaddle2\x18\x04 \x01(\v2\x10.pingpong.VectorR\aPaddle2\x12\x16\n" +
	"\x06Score1\x18\x05 \x01(\x05R\x06Score1\x12\x16\n" +
	"\x06Score2\x18\x06 \x01(\x05R\x06Score2\x12\x1b\n" +
	"\tplayer_id\x18\a \x01(\tR\bplayerId2A\n" +
	"\bPingPong\x125\n" +
	"\x04Play\x12\x14.pingpong.GameAction\x1a\x13.pingpong.GameState(\x010\x01B\x19Z\x17JuegoCeN/proto;pingpongb\x06proto3"

var (
	file_proto_pingpong_proto_rawDescOnce sync.Once
	file_proto_pingpong_proto_rawDescData []byte
)

func file_proto_pingpong_proto_rawDescGZIP() []byte {
	file_proto_pingpong_proto_rawDescOnce.Do(func() {
		file_proto_pingpong_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_pingpong_proto_rawDesc), len(file_proto_pingpong_proto_rawDesc)))
	})
	return file_proto_pingpong_proto_rawDescData
}

var file_proto_pingpong_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_pingpong_proto_goTypes = []any{
	(*GameAction)(nil), // 0: pingpong.GameAction
	(*Vector)(nil),     // 1: pingpong.Vector
	(*GameState)(nil),  // 2: pingpong.GameState
}
var file_proto_pingpong_proto_depIdxs = []int32{
	1, // 0: pingpong.GameState.Ball:type_name -> pingpong.Vector
	1, // 1: pingpong.GameState.Paddle1:type_name -> pingpong.Vector
	1, // 2: pingpong.GameState.Paddle2:type_name -> pingpong.Vector
	0, // 3: pingpong.PingPong.Play:input_type -> pingpong.GameAction
	2, // 4: pingpong.PingPong.Play:output_type -> pingpong.GameState
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_pingpong_proto_init() }
func file_proto_pingpong_proto_init() {
	if File_proto_pingpong_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_pingpong_proto_rawDesc), len(file_proto_pingpong_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_pingpong_proto_goTypes,
		DependencyIndexes: file_proto_pingpong_proto_depIdxs,
		MessageInfos:      file_proto_pingpong_proto_msgTypes,
	}.Build()
	File_proto_pingpong_proto = out.File
	file_proto_pingpong_proto_goTypes = nil
	file_proto_pingpong_proto_depIdxs = nil
}
